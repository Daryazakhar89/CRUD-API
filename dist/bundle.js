(()=>{var e={738:(e,t,s)=>{const n=s(647),r=s(520),o=s(66),i=s(968).version,a=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function d(e){console.log(`[dotenv@${i}][DEBUG] ${e}`)}const c={config:function(e){let t=r.resolve(process.cwd(),".env"),s="utf8";const i=Boolean(e&&e.debug),a=Boolean(e&&e.override);var u;e&&(null!=e.path&&(t="~"===(u=e.path)[0]?r.join(o.homedir(),u.slice(1)):u),null!=e.encoding&&(s=e.encoding));try{const e=c.parse(n.readFileSync(t,{encoding:s}));return Object.keys(e).forEach((function(t){Object.prototype.hasOwnProperty.call(process.env,t)?(!0===a&&(process.env[t]=e[t]),i&&d(!0===a?`"${t}" is already defined in \`process.env\` and WAS overwritten`:`"${t}" is already defined in \`process.env\` and was NOT overwritten`)):process.env[t]=e[t]})),{parsed:e}}catch(e){return i&&d(`Failed to load ${t} ${e.message}`),{error:e}}},parse:function(e){const t={};let s,n=e.toString();for(n=n.replace(/\r\n?/gm,"\n");null!=(s=a.exec(n));){const e=s[1];let n=s[2]||"";n=n.trim();const r=n[0];n=n.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===r&&(n=n.replace(/\\n/g,"\n"),n=n.replace(/\\r/g,"\r")),t[e]=n}return t}};e.exports.config=c.config,e.exports.parse=c.parse,e.exports=c},647:()=>{},66:()=>{},520:()=>{},854:()=>{},968:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.0.3","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"require":"./lib/main.js","types":"./lib/main.d.ts","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^17.0.9","decache":"^4.6.1","dtslint":"^3.7.0","sinon":"^12.0.1","standard":"^16.0.4","standard-markdown":"^7.1.0","standard-version":"^9.3.2","tap":"^15.1.6","tar":"^6.1.11","typescript":"^4.5.4"},"engines":{"node":">=12"}}')}},t={};function s(n){var r=t[n];if(void 0!==r)return r.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,s),o.exports}(()=>{"use strict";var e=s(854);s(738).config();const t={PORT:process.env.PORT||4e3,NODE_ENV:"production"},n=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,r=function(e){return"string"==typeof e&&n.test(e)},o={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let i;const a=new Uint8Array(16);function d(){if(!i&&(i="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!i))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return i(a)}const c=[];for(let e=0;e<256;++e)c.push((e+256).toString(16).slice(1));const u=function(e,t,s){if(o.randomUUID&&!t&&!e)return o.randomUUID();const n=(e=e||{}).random||(e.rng||d)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){s=s||0;for(let e=0;e<16;++e)t[s+e]=n[e];return t}return function(e,t=0){return(c[e[t+0]]+c[e[t+1]]+c[e[t+2]]+c[e[t+3]]+"-"+c[e[t+4]]+c[e[t+5]]+"-"+c[e[t+6]]+c[e[t+7]]+"-"+c[e[t+8]]+c[e[t+9]]+"-"+c[e[t+10]]+c[e[t+11]]+c[e[t+12]]+c[e[t+13]]+c[e[t+14]]+c[e[t+15]]).toLowerCase()}(n)};class p{static httpMethodsWithBody=["POST"];requests={GET:{},POST:{},PUT:{},DELETE:{}};async handleRequest(e,t){const s=e.method,n=this.requests[s],r=this.findMatchingHandler(e,n);if(r)return await this.enrichRequestWithBodyIfRequired(e),r(e,t);t.statusCode=404,t.write("The request doesn't exist"),t.end()}async enrichRequestWithBodyIfRequired(e){if(p.httpMethodsWithBody.includes(e.method)){const t=await p.getRequestBody(e)||{};e.body=t}}findMatchingHandler(e,t){let s;for(const n in t){const r=this.getRegexpFromPath(n);r.test(e.url)&&(e.parameters=e.url.match(r)?.groups||{},s=t[n])}return s}getRegexpFromPath(e){const t=e.replace(/(.*)({(.*)})/,"$1(?<$3>.*)");return new RegExp(t)}get(e,t){this.requests.GET[e]=t}post(e,t){this.requests.POST[e]=t}put(e,t){this.requests.PUT[e]=t}delete(e,t){this.requests.DELETE[e]=t}static getRequestBody(e){let t="";return e.on("data",(e=>{t+=e.toString()})),new Promise(((s,n)=>{e.on("end",(()=>{try{const e=JSON.parse(t);s(e)}catch(e){n(e)}s()})),e.on("error",(e=>{n(e)}))}))}getInstance(){return this}}const l={isUserDataValid(e){const t=e.userName&&"string"==typeof e.userName,s=isFinite(e.age)&&e.age>=0,n=Array.isArray(e.hobbies)&&e.hobbies.every((e=>"string"==typeof e));return t&&s&&n}},f=[{id:"b960c3b6-4653-415a-b9d8-8aa23d9fa35b",userName:"John",age:"10",hobbies:"footbal"},{id:"109156be-c4fb-41ea-b1b4-efe1671c5836",userName:"Alex",age:"15",hobbies:"footbal"}],g=async e=>f.find((t=>t.id===e)),y=g,h=new p,m=(e,t)=>{const s=r(t)&&4===function(e){if(!r(e))throw TypeError("Invalid UUID");return parseInt(e.slice(14,15),16)}(t);return s||(e.statusCode=400,e.write("The user id is not valid uuid"),e.end()),s};h.get("/api/users",(async(e,t)=>{t.statusCode=200,t.write(JSON.stringify(await(async()=>f)())),t.end()})),h.get("/api/users/{userId}",(async(e,t)=>{const{userId:s}=e.parameters,n=JSON.stringify(await y(s));n?t.write(n):(t.statusCode=404,t.write("The user is not found")),t.end()})),h.post("/api/users",(async(e,t)=>{const s=e.body;if(!l.isUserDataValid(s))return t.statusCode=400,t.write("Invalid data for request"),void t.end();const n={id:u(),userName:s.userName,age:s.age,hobbies:s.hobbies},r=await(async e=>(f.push(e),e))(n);t.statusCode=201,t.end(JSON.stringify(r))})),h.put("/api/users/{userId}",(async(e,t)=>{const{userId:s}=e.parameters,n=e.body,r=await y(s);if(m(t,s)){if(r){if(!l.isUserDataValid(n))return t.statusCode=400,t.write("Invalid data for request"),void t.end();await(async(e,t)=>{let s=await g(e);return Object.assign(s,t)})(s,n),t.statusCode=200,t.end(JSON.stringify(r))}else t.statusCode=404,t.write("The user is not found");t.end()}})),h.delete("/api/users/{userId}",(async(e,t)=>{const{userId:s}=e.parameters;m(t,s)&&(await(async e=>{let t;const s=f.findIndex((t=>t.id===e));return s>-1&&(t=f.splice(s,1)[0]),t})(s)?(t.statusCode=204,t.write("The user has been deleted")):(t.statusCode=404,t.write("The user is not found")),t.end())}));const b=h,{PORT:v}=t;(0,e.createServer)(b.handleRequest.bind(b)).listen(v,(()=>{console.log(`Server is listening on port ${v}`)}))})()})();